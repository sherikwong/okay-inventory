'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var PropTypes = _interopDefault(require('prop-types'));
var styledComponents = _interopDefault(require('styled-components'));
var styledJss = _interopDefault(require('styled-jss'));

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var styled = createCommonjsModule(function (module) {
  try {
    module.exports = styledComponents["default"];
  } catch (e) {
    try {
      module.exports = styledJss["default"];
    } catch (e) {
      throw new Error('Either styled-components or styled-jss must be installed');
    }
  }
});

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var DEFAULT_CONFIG = {
  calendarIcon: {
    textColor: 'white',
    // text color of the header and footer
    primaryColor: '#e85650',
    // used as background of the header and footer
    backgroundColor: '#fafafa'
  }
};
var themedConfig = function themedConfig(theme) {
  var config = !theme || !theme.calendarIcon ? _objectSpread({}, DEFAULT_CONFIG.calendarIcon) : _objectSpread({}, DEFAULT_CONFIG.calendarIcon, {}, theme.calendarIcon);
  return config;
};

var IconDiv = styled('div')({
  fontSize: '0.7em',
  backgroundColor: function backgroundColor(props) {
    return themedConfig(props.theme).backgroundColor;
  },
  height: '8em',
  width: '8em',
  borderRadius: '0.7em',
  overflow: 'hidden',
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  justifyContent: 'space-between'
});

var HeaderDiv = styled('div')({
  color: function color(props) {
    return themedConfig(props.theme).textColor;
  },
  backgroundColor: function backgroundColor(props) {
    return themedConfig(props.theme).primaryColor;
  },
  width: '100%',
  textAlign: 'center',
  fontSize: '1.2em',
  lineHeight: '1.4em'
});

var FooterDiv = styled('div')({
  color: function color(props) {
    return themedConfig(props.theme).textColor;
  },
  backgroundColor: function backgroundColor(props) {
    return themedConfig(props.theme).primaryColor;
  },
  width: '100%',
  textAlign: 'center',
  fontSize: '1.2em',
  lineHeight: '1.4em'
});

var ValueDiv = styled('div')({
  letterSpacing: '-0.05em',
  fontSize: '2.6rem',
  marginRight: '0.15em',
  marginTop: '0.1em'
});

var ContentIcon = function ContentIcon(_ref) {
  var header = _ref.header,
      value = _ref.value,
      footer = _ref.footer;
  return React.createElement(IconDiv, null, React.createElement(HeaderDiv, null, header), React.createElement(ValueDiv, null, value), React.createElement(FooterDiv, null, footer));
};

ContentIcon.propTypes = {
  header: PropTypes.any,
  footer: PropTypes.any,
  value: PropTypes.any
};

var defaultOptions = {
  header: {
    weekday: 'long'
  },
  footer: {
    month: 'long'
  },
  value: {
    day: '2-digit'
  },
  locale: []
};

var formatDate = function formatDate(date, locale, formatOptions) {
  return date.toLocaleDateString(locale, formatOptions);
};

var CalendarIcon = function CalendarIcon(_ref) {
  var date = _ref.date,
      theme = _ref.theme,
      options = _ref.options;
  return React.createElement(ContentIcon, {
    header: options ? formatDate(date, options.locale, options.header) : formatDate(date, defaultOptions.locale, defaultOptions.header),
    value: options ? formatDate(date, options.locale, options.value) : formatDate(date, defaultOptions.locale, defaultOptions.value),
    footer: options ? formatDate(date, options.locale, options.footer) : formatDate(date, defaultOptions.locale, defaultOptions.footer)
  });
};

CalendarIcon.propTypes = {
  date: PropTypes.instanceOf(Date).isRequired,
  theme: PropTypes.object,
  options: PropTypes.object
};

exports.CalendarIcon = CalendarIcon;
exports.ContentIcon = ContentIcon;
exports.DEFAULT_CONFIG = DEFAULT_CONFIG;
exports.default = CalendarIcon;
