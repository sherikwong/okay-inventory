import { ReactNode } from "react";
import firebaseNs from "firebase/app";
export declare enum SIGNIN_PROVIDERS {
    PASSWORD = "password",
    GOOGLE = "google",
    FACEBOOK = "facebook",
    TWITTER = "twitter",
    GITHUB = "github",
    MICROSOFT = "microsoft",
    YAHOO = "yahoo"
}
export declare function FirebaseAuthProvider({ firebase, children, }: {
    firebase: typeof firebaseNs;
    children: ReactNode;
}): JSX.Element;
export declare function useFirebaseAuth(): {
    user: firebaseNs.User | null;
    loading: boolean;
    error: firebaseNs.FirebaseError | null | undefined;
    firstCheck: boolean;
    signInWithEmailAndPassword: (email: string, password: string) => Promise<void | firebaseNs.auth.UserCredential>;
    signInWithProvider: (provider: string | firebaseNs.auth.AuthProvider, options?: {
        scopes?: string[] | undefined;
    } | undefined) => Promise<firebaseNs.auth.UserCredential | null>;
    signOut: () => Promise<void>;
    createUserWithEmailAndPassword: (email: string, password: string) => Promise<void | firebaseNs.auth.UserCredential>;
    sendPasswordResetEmail: (email: string) => Promise<void>;
    verifyPasswordResetCode: (code: string) => Promise<string>;
    confirmPasswordReset: (code: string, newPassword: string) => Promise<void>;
    updateProfile: ({ displayName, photoURL, }: {
        displayName?: string | undefined;
        photoURL?: string | undefined;
    }) => Promise<void>;
    updatePassword: (newPassword: string) => Promise<void>;
    applyActionCode: (code: string) => Promise<void>;
};
