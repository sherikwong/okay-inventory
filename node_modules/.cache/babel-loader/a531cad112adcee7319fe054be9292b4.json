{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { itemsDB } from '../database/items';\n\nconst useItem = id => {\n  const [_details, setDetails] = useState({\n    name: '',\n    date: new Date(),\n    tags: [],\n    quantity: 0\n  });\n  useEffect(() => {\n    if (id) {\n      itemsDB.get(id).then(res => {\n        res.quantity = res.quantity === undefined ? 0 : res.quantity;\n        setDetails({ ..._details,\n          ...res\n        });\n      });\n    }\n  }, [id]);\n  const details = _details || {};\n  return {\n    details,\n    setDetails\n  };\n};\n\nexport default useItem;","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/hooks/useItem.tsx"],"names":["useEffect","useState","itemsDB","useItem","id","_details","setDetails","name","date","Date","tags","quantity","get","then","res","undefined","details"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AASA,MAAMC,OAAiC,GAAIC,EAAD,IAAQ;AAChD,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBL,QAAQ,CAAC;AACtCM,IAAAA,IAAI,EAAE,EADgC;AAEtCC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EAFgC;AAGtCC,IAAAA,IAAI,EAAE,EAHgC;AAItCC,IAAAA,QAAQ,EAAE;AAJ4B,GAAD,CAAvC;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,EAAJ,EAAQ;AACNF,MAAAA,OAAO,CAACU,GAAR,CAAYR,EAAZ,EAAgBS,IAAhB,CAAqBC,GAAG,IAAI;AAC1BA,QAAAA,GAAG,CAACH,QAAJ,GAAeG,GAAG,CAACH,QAAJ,KAAiBI,SAAjB,GAA6B,CAA7B,GAAiCD,GAAG,CAACH,QAApD;AACAL,QAAAA,UAAU,CAAC,EAAE,GAAGD,QAAL;AAAe,aAAGS;AAAlB,SAAD,CAAV;AACD,OAHD;AAID;AACF,GAPQ,EAON,CAACV,EAAD,CAPM,CAAT;AASA,QAAMY,OAAO,GAAIX,QAAQ,IAAI,EAA7B;AAEA,SAAO;AAAEW,IAAAA,OAAF;AAAWV,IAAAA;AAAX,GAAP;AACD,CApBD;;AAsBA,eAAeH,OAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { itemsDB } from '../database/items';\nimport { IItem } from '../models/items';\n\n\ninterface IUseItem {\n  details: IItem;\n  setDetails: Function;\n}\n\nconst useItem: (id: string) => IUseItem = (id) => {\n  const [_details, setDetails] = useState({\n    name: '',\n    date: new Date(),\n    tags: [],\n    quantity: 0\n  });\n\n  useEffect(() => {\n    if (id) {\n      itemsDB.get(id).then(res => {\n        res.quantity = res.quantity === undefined ? 0 : res.quantity;\n        setDetails({ ..._details, ...res });\n      });\n    }\n  }, [id])\n\n  const details = (_details || {}) as any as IItem;\n\n  return { details, setDetails };\n}\n\nexport default useItem;\n"]},"metadata":{},"sourceType":"module"}