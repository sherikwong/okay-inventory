{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/List/Cell/actions.tsx\";\nimport React from 'react';\nimport { Box, Button as _Button } from 'grommet';\nimport { Next } from 'grommet-icons';\nimport styled from 'styled-components';\nconst Button = styled(_Button)`\n${({\n  isVisible\n}) => `opacity: ${isVisible ? 1 : 0}`};\npadding: 0;\n`;\n\nconst ActionsCell = props => {\n  const {\n    datum,\n    refresh,\n    selectedID,\n    setSelectedID,\n    history\n  } = props;\n\n  const navigateToItem = () => {\n    history.push(`/item/${datum.id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Next, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }),\n    onClick: navigateToItem,\n    isVisible: selectedID.has(datum.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ActionsCell;","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/List/Cell/actions.tsx"],"names":["React","Box","Button","_Button","Next","styled","isVisible","ActionsCell","props","datum","refresh","selectedID","setSelectedID","history","navigateToItem","push","id","has"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAM,IAAIC,OAAxB,QAAuC,SAAvC;AACA,SAA2BC,IAA3B,QAAuC,eAAvC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAMA,MAAMH,MAAM,GAAGG,MAAM,CAACF,OAAD,CAAoB;EACvC,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAoB,YAAWA,SAAS,GAAG,CAAH,GAAO,CAAE,EAAE;;CADrD;;AAKA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA,aAA9B;AAA6CC,IAAAA;AAA7C,MAAyDL,KAA/D;;AAGA,QAAMM,cAAc,GAAG,MAAM;AAC3BD,IAAAA,OAAO,CAACE,IAAR,CAAc,SAAQN,KAAK,CAACO,EAAG,EAA/B;AACD,GAFD;;AAIA,sBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAwB,IAAA,OAAO,EAAEF,cAAjC;AAAiD,IAAA,SAAS,EAAEH,UAAU,CAACM,GAAX,CAAeR,KAAK,CAACO,EAArB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAdD;;AAgBA,eAAeT,WAAf","sourcesContent":["import React from 'react';\nimport { Box, Button as _Button } from 'grommet';\nimport { Trash, Checkmark, Next } from 'grommet-icons';\nimport { itemsDB } from '../../../database/items';\nimport styled from 'styled-components';\n\ninterface IButton {\n  isVisible: boolean;\n}\n\nconst Button = styled(_Button) <IButton>`\n${({ isVisible }) => `opacity: ${isVisible ? 1 : 0}`};\npadding: 0;\n`;\n\nconst ActionsCell = props => {\n  const { datum, refresh, selectedID, setSelectedID, history } = props;\n\n\n  const navigateToItem = () => {\n    history.push(`/item/${datum.id}`);\n  };\n\n  return (\n    <Box direction=\"row\">\n      {/* <Button icon={<Checkmark />} onClick={() => onSave()} /> */}\n      <Button icon={<Next />} onClick={navigateToItem} isVisible={selectedID.has(datum.id)} />\n    </Box>\n  );\n}\n\nexport default ActionsCell;\n"]},"metadata":{},"sourceType":"module"}