{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/item/EditItem/Name.tsx\";\nimport { Box } from 'grommet';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { itemsDB } from '../../../database/items';\nimport SpinnerButton from '../../reusable/SpinnerButton/SpinnerButton';\nimport { WhiteBgTextInput } from './EditTags';\n\nconst Name = props => {\n  const {\n    details,\n    history\n  } = props;\n  const [name, setName] = useState('Name');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setName(details.name);\n  }, [details]);\n\n  const onType = $event => {\n    setName($event.target.value);\n  };\n\n  const onSubmit = () => {\n    itemsDB.update(details.id, { ...details,\n      name\n    }).then(res => {\n      setLoading(false);\n    }).then(res => {\n      history.push(`/item/${details.id}/edit/tags`);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    justify: \"center\",\n    pad: \"large\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WhiteBgTextInput, {\n    value: name,\n    onChange: onType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    pad: {\n      left: 'medium'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerButton, {\n    onClick: onSubmit,\n    loading: loading,\n    setLoading: setLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default withRouter(Name);","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/item/EditItem/Name.tsx"],"names":["Box","React","useEffect","useState","withRouter","itemsDB","SpinnerButton","WhiteBgTextInput","Name","props","details","history","name","setName","loading","setLoading","onType","$event","target","value","onSubmit","update","id","then","res","push","left"],"mappings":";AAAA,SAASA,GAAT,QAAoB,SAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBF,KAA7B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,MAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACH,OAAO,CAACE,IAAT,CAAP;AACD,GAFQ,EAEN,CAACF,OAAD,CAFM,CAAT;;AAKA,QAAMM,MAAM,GAAGC,MAAM,IAAI;AACvBJ,IAAAA,OAAO,CAACI,MAAM,CAACC,MAAP,CAAcC,KAAf,CAAP;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrBf,IAAAA,OAAO,CAACgB,MAAR,CAAeX,OAAO,CAACY,EAAvB,EAA2B,EACzB,GAAGZ,OADsB;AAEzBE,MAAAA;AAFyB,KAA3B,EAGGW,IAHH,CAGQC,GAAG,IAAI;AACbT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD,EAKGQ,IALH,CAKQC,GAAG,IAAI;AACbb,MAAAA,OAAO,CAACc,IAAR,CAAc,SAAQf,OAAO,CAACY,EAAG,YAAjC;AACD,KAPD;AASD,GAVD;;AAYA,sBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,IAAX;AAAiB,IAAA,OAAO,EAAC,QAAzB;AAAkC,IAAA,GAAG,EAAC,OAAtC;AAA8C,IAAA,SAAS,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEV,IADT;AAEE,IAAA,QAAQ,EAAEI,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAE;AAAEU,MAAAA,IAAI,EAAE;AAAR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEN,QAAxB;AAAkC,IAAA,OAAO,EAAEN,OAA3C;AAAoD,IAAA,UAAU,EAAEC,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD,CApCD;;AAsCA,eAAeX,UAAU,CAACI,IAAD,CAAzB","sourcesContent":["import { Box } from 'grommet';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { itemsDB } from '../../../database/items';\nimport SpinnerButton from '../../reusable/SpinnerButton/SpinnerButton';\nimport { WhiteBgTextInput } from './EditTags';\n\nconst Name = props => {\n  const { details, history } = props;\n  const [name, setName] = useState('Name');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setName(details.name);\n  }, [details]);\n\n\n  const onType = $event => {\n    setName($event.target.value);\n  }\n\n  const onSubmit = () => {\n    itemsDB.update(details.id, {\n      ...details,\n      name\n    }).then(res => {\n      setLoading(false);\n    }).then(res => {\n      history.push(`/item/${details.id}/edit/tags`);\n    })\n\n  }\n\n  return (\n    <Box fill={true} justify=\"center\" pad=\"large\" direction=\"row\">\n      <WhiteBgTextInput\n        value={name}\n        onChange={onType} />\n      <Box pad={{ left: 'medium' }}>\n        <SpinnerButton onClick={onSubmit} loading={loading} setLoading={setLoading} />\n      </Box>\n    </Box>\n  )\n};\n\nexport default withRouter(Name);\n"]},"metadata":{},"sourceType":"module"}