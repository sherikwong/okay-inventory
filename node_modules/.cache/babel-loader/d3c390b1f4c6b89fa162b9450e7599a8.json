{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/List/Filters/tags.tsx\";\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Box } from 'grommet';\nimport React, { useEffect, useState } from 'react';\nimport { WhiteBgTextInput } from '../../item/EditItem/EditTags';\nimport Tags, { getAllTags } from '../../reusable/Tags/Tags';\n\nconst ListTagsFilter = props => {\n  const {\n    onFilter\n  } = props;\n  const [tags, setTags] = useState(new Set([])); // const [isDictating, setDictating] = useState(false);\n\n  const [search, setSearch] = useState('');\n  const [allTags, setAllTags] = useState(new Map([]));\n  const [loading, setLoading] = useState(false);\n  useEffect(getAllTags(setAllTags), []); // useEffect(() => {\n  //   setTags(new Set(details ? details.tags : state.details.tags));\n  // }, [details]);\n\n  const removeExistingTags = () => {\n    return [...allTags.values()].filter(tag => {\n      return !tags.has(tag.id);\n    }).map(tag => ({\n      label: tag.name,\n      value: tag.id\n    }));\n  };\n\n  const onType = ({\n    target: {\n      value: searchValue\n    }\n  }) => {\n    setSearch(searchValue);\n  };\n\n  const onSelect = $event => {\n    const id = $event.suggestion.value;\n    const safeTags = new Set(tags);\n    safeTags.add(id);\n    console.log('Selecting', safeTags);\n    setTags(safeTags);\n    onFilter({\n      tags: safeTags\n    });\n  };\n\n  const onRemove = tag => {\n    const withRemoved = new Set(tags);\n    withRemoved.delete(tag.id);\n    setTags(withRemoved);\n    onFilter({\n      tags: withRemoved\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    justify: \"start\",\n    fill: \"horizontal\",\n    pad: {\n      left: 'large',\n      right: 'large'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pad: {\n      top: 'large'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tags, {\n    tags: tags,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    pad: {\n      top: 'medium',\n      bottom: 'large'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WhiteBgTextInput, {\n    value: search,\n    suggestions: removeExistingTags(),\n    onSelect: onSelect,\n    onChange: onType,\n    placeholder: \"Tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ListTagsFilter;","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/List/Filters/tags.tsx"],"names":["Box","React","useEffect","useState","WhiteBgTextInput","Tags","getAllTags","ListTagsFilter","props","onFilter","tags","setTags","Set","search","setSearch","allTags","setAllTags","Map","loading","setLoading","removeExistingTags","values","filter","tag","has","id","map","label","name","value","onType","target","searchValue","onSelect","$event","suggestion","safeTags","add","console","log","onRemove","withRemoved","delete","left","right","top","bottom"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Box } from 'grommet';\nimport React, { useEffect, useState } from 'react';\nimport { ITag } from '../../../database/tags';\nimport { CenteredBox, WhiteBgTextInput } from '../../item/EditItem/EditTags';\nimport Tags, { getAllTags } from '../../reusable/Tags/Tags';\n\nconst ListTagsFilter = props => {\n  const { onFilter } = props;\n  const [tags, setTags] = useState(new Set([] as string[]));\n  // const [isDictating, setDictating] = useState(false);\n  const [search, setSearch] = useState('');\n  const [allTags, setAllTags] = useState(new Map([]));\n  const [loading, setLoading] = useState(false);\n\n  useEffect(getAllTags(setAllTags), []);\n\n  // useEffect(() => {\n  //   setTags(new Set(details ? details.tags : state.details.tags));\n  // }, [details]);\n\n  const removeExistingTags = () => {\n    return [...allTags.values()].filter(tag => {\n      return !tags.has((tag as ITag).id);\n    }).map(tag => ({\n      label: (tag as ITag).name,\n      value: (tag as ITag).id\n    }));\n  }\n\n  const onType = ({ target: { value: searchValue } }) => {\n    setSearch(searchValue);\n  }\n\n  const onSelect = $event => {\n    const id = $event.suggestion.value;\n\n    const safeTags = new Set(tags);\n    safeTags.add(id);\n    console.log('Selecting', safeTags);\n    setTags(safeTags);\n    onFilter({ tags: safeTags });\n\n  }\n\n  const onRemove = (tag: ITag) => {\n    const withRemoved = new Set(tags);\n    withRemoved.delete(tag.id);\n    setTags(withRemoved);\n    onFilter({ tags: withRemoved });\n  }\n\n  return (\n    <Box justify=\"start\" fill=\"horizontal\" pad={{\n      left: 'large',\n      right: 'large'\n    }\n    }>\n\n      <Box pad={{ top: 'large' }}>\n        <Tags tags={tags} onRemove={onRemove} />\n      </Box>\n\n      <Box pad={{ top: 'medium', bottom: 'large' }}>\n        <WhiteBgTextInput\n          value={search}\n          suggestions={removeExistingTags()}\n          onSelect={onSelect}\n          onChange={onType}\n          placeholder=\"Tags\"\n        />\n      </Box>\n\n\n\n    </Box>\n  );\n}\n\n\nexport default ListTagsFilter;\n"]},"metadata":{},"sourceType":"module"}