{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/List/List.tsx\";\nimport { Box, Button, DataTable, Keyboard } from 'grommet';\nimport { Add, Camera, Down, Refresh, Up, Copy, Trash } from 'grommet-icons';\nimport { createBrowserHistory } from 'history';\nimport { intersection } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Router, withRouter } from 'react-router-dom';\nimport { Swipeable } from 'react-swipeable';\nimport styled from 'styled-components';\nimport { itemsDB } from '../../database/items';\nimport useItems from '../../hooks/useItems';\nimport ActionsCell from './Cell/actions';\nimport NameCell from './Cell/Name';\nimport QuantityCell from './Cell/Quantity';\nimport TagsCell from './Cell/Tags';\nimport ListNameFilter from './Filters/name';\nimport ListTagsFilter from './Filters/tags';\nimport './List.scss';\nimport SelectedCell from './Cell/Selected';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport DateCell from './Cell/Date';\nimport { SmallButton } from './Cell/Selected';\nexport const listHistory = createBrowserHistory();\nconst ListContainer = styled(Box)`\n  height: 100vh;\n`;\nconst FilledSwipable = styled(Swipeable)`\n  flex: 1 2 auto;\n  flex-direction: column;\n  justify-content: space-between;\n  display: flex;\n  overflow: auto;\n  width: 100%;\n`;\n\nconst List = ({\n  history\n}) => {\n  const [isAscQty, setAscQty] = useState(false);\n  const [isAscDate, setAscDate] = useState(false);\n  const [hasHadInitialFilter, setHasHadInitialFilter] = useState(false);\n  const [filteredData, setFilteredData] = useState([]);\n  const [reload, triggerReload] = useState(0);\n\n  const toggleSortQty = () => setAscQty(!isAscQty);\n\n  const toggleSortDate = () => setAscDate(!isAscDate);\n\n  const items = useItems({\n    dependencies: reload\n  });\n  const [filter, setFilter] = useState({});\n\n  const onFilter = newFilter => {\n    setHasHadInitialFilter(true);\n\n    if (!newFilter.name && !newFilter.tags) {\n      setFilter(undefined);\n    } else {\n      setFilter({ ...(filter ? filter : []),\n        ...newFilter\n      });\n    }\n  };\n\n  useEffect(() => {\n    const filterCb = item => {\n      if (!!item && !!filter) {\n        const hasMatchingName = item.name && filter.name ? item.name.toLowerCase().includes(filter.name.toLowerCase()) : false;\n        const hasMatchingTags = filter.tags && filter.tags.size ? !!intersection(item.tags, filter.tags ? [...filter.tags] : []).length : true;\n        return hasMatchingName && hasMatchingTags;\n      }\n\n      return true;\n    };\n\n    const sortQty = (a, b) => {\n      return isAscQty ? a.quantity - b.quantity : b.quantity - a.quantity;\n    };\n\n    const sortDate = (a, b) => {\n      return isAscDate ? +a.date - +b.date : +b.date - +a.date;\n    };\n\n    const data = Object.values(items).filter(hasHadInitialFilter ? filterCb : () => true).map((item, index) => {\n      if (!(item.quantity >= 0)) {\n        item.quantity = 0;\n      }\n\n      return { ...item,\n        date: new Date(item.date),\n        index\n      };\n    }); // .sort(sortQty)\n    // .sort(sortDate);\n\n    setFilteredData(data);\n  }, [filter, items, isAscQty, isAscDate, hasHadInitialFilter]);\n\n  const updateDatum = (newItem, triggerUpdate = true) => {\n    const sanitizedItem = { ...newItem\n    };\n    delete sanitizedItem.index;\n    itemsDB.update(newItem.id, sanitizedItem);\n\n    if (triggerUpdate) {\n      triggerReload(reload + 1);\n    }\n  };\n\n  const addNewItem = () => {\n    const newItem = {\n      date: new Date()\n    };\n    itemsDB.add(newItem).then(item => {\n      triggerReload(reload + 1);\n    });\n  };\n\n  let columns = [{\n    property: 'selected',\n    header: /*#__PURE__*/React.createElement(React.Fragment, null),\n    render: datum => /*#__PURE__*/React.createElement(SelectedCell, {\n      datum: datum,\n      selectedIDs: selectedIDs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 24\n      }\n    })\n  }, {\n    property: 'date',\n    header: /*#__PURE__*/React.createElement(Box, {\n      direction: \"row\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(SmallButton, {\n      icon: isAscDate ? /*#__PURE__*/React.createElement(Up, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 42\n        }\n      }) : /*#__PURE__*/React.createElement(Down, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 51\n        }\n      }),\n      onClick: toggleSortDate,\n      isSelected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    })),\n    render: datum => /*#__PURE__*/React.createElement(DateCell, {\n      datum: datum,\n      selectedIDs: selectedIDs,\n      updateDatum: updateDatum,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 24\n      }\n    })\n  }, {\n    property: 'id',\n    primary: true,\n    render: datum => /*#__PURE__*/React.createElement(React.Fragment, null),\n    header: /*#__PURE__*/React.createElement(React.Fragment, null)\n  }, {\n    property: 'name',\n    header: /*#__PURE__*/React.createElement(ListNameFilter, {\n      onFilter: onFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }),\n    render: datum => /*#__PURE__*/React.createElement(NameCell, {\n      datum: datum,\n      selectedIDs: selectedIDs,\n      updateDatum: updateDatum,\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 24\n      }\n    })\n  }, {\n    property: 'tags',\n    header: /*#__PURE__*/React.createElement(ListTagsFilter, {\n      onFilter: onFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }),\n    render: datum => /*#__PURE__*/React.createElement(TagsCell, {\n      datum: datum,\n      selectedIDs: selectedIDs,\n      updateDatum: updateDatum,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 24\n      }\n    })\n  }, {\n    property: 'quantity',\n    header: /*#__PURE__*/React.createElement(Box, {\n      direction: \"row\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Qty\"), /*#__PURE__*/React.createElement(SmallButton, {\n      icon: isAscQty ? /*#__PURE__*/React.createElement(Up, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(Down, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 50\n        }\n      }),\n      onClick: toggleSortQty,\n      isSelected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    })),\n    render: datum => /*#__PURE__*/React.createElement(QuantityCell, {\n      datum: datum,\n      selectedIDs: selectedIDs,\n      updateDatum: updateDatum,\n      selectedID: selectedIDs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 24\n      }\n    })\n  }, {\n    property: 'actions',\n    header: /*#__PURE__*/React.createElement(React.Fragment, null),\n    render: datum => /*#__PURE__*/React.createElement(ActionsCell, {\n      datum: datum,\n      selectedIDs: selectedIDs,\n      history: history,\n      refresh: () => triggerReload(reload + 1),\n      selectedID: selectedIDs,\n      setSelectedID: setSelectedIDs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 24\n      }\n    })\n  }]; // const onSaveNew = () => {\n  //   setNewItem({} as IEditableItem);\n  //   triggerReload(reload + 1);\n  //   setSelectedIDs(new Set([]));\n  // }\n\n  const [selectedIDs, setSelectedIDs] = useState(new Set([]));\n\n  const onItemSelect = ({\n    datum\n  }) => {\n    const _selectedIDs = new Set(selectedIDs);\n\n    if (selectedIDs.has(datum.id)) {\n      _selectedIDs.delete(datum.id);\n    } else {\n      _selectedIDs.add(datum.id);\n    }\n\n    setSelectedIDs(_selectedIDs);\n  }; // useEffect(() => {\n  //   setDataIncludingNew(newItem.id ? [newItem, ...filteredData] : filteredData);\n  // }, [filteredData, newItem]);\n\n\n  const goToCamera = () => {\n    history.push('/');\n  };\n\n  const [highlightIndex, setHighlightIndex] = useState(0);\n  const selectedStyle = {\n    background: 'rgba(255, 255, 255, .1)'\n  };\n  const [rowStyles, setRowStyles] = useState({});\n  const [linksToCopy, setLinksToCopy] = useState('');\n\n  const generateLinks = () => {\n    const prefix = 'http://sherikwong.com/item/';\n    return [...selectedIDs].map(id => prefix + id).join('\\n\\n');\n  };\n\n  useEffect(() => {\n    const stylesAppliedToSelected = [...selectedIDs].reduce((obj, id) => {\n      return { ...obj,\n        [id]: selectedStyle\n      };\n    }, {});\n    setRowStyles(stylesAppliedToSelected);\n    setLinksToCopy(generateLinks());\n  }, [selectedIDs]);\n\n  const deleteItems = () => {\n    selectedIDs.forEach(id => {\n      itemsDB.delete(id).then(res => {\n        const _selectedIDs = new Set(selectedIDs);\n\n        _selectedIDs.delete(id);\n\n        setSelectedIDs(_selectedIDs);\n        triggerReload(reload + 1);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Keyboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListContainer, {\n    fill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    margin: \"medium\",\n    justify: \"between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Camera, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }),\n    onClick: goToCamera,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Refresh, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }),\n    onClick: () => triggerReload(reload + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Router, {\n    history: listHistory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FilledSwipable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    columns: columns,\n    rowProps: rowStyles,\n    data: filteredData,\n    onClickRow: onItemSelect,\n    primaryKey: \"id\",\n    pad: \"xxsmall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    justify: \"center\",\n    margin: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 27\n      }\n    }),\n    onClick: addNewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }), selectedIDs.size > 0 && /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: linksToCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Copy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Trash, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 27\n      }\n    }),\n    onClick: deleteItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default withRouter(List);","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/List/List.tsx"],"names":["Box","Button","DataTable","Keyboard","Add","Camera","Down","Refresh","Up","Copy","Trash","createBrowserHistory","intersection","React","useEffect","useState","Router","withRouter","Swipeable","styled","itemsDB","useItems","ActionsCell","NameCell","QuantityCell","TagsCell","ListNameFilter","ListTagsFilter","SelectedCell","CopyToClipboard","DateCell","SmallButton","listHistory","ListContainer","FilledSwipable","List","history","isAscQty","setAscQty","isAscDate","setAscDate","hasHadInitialFilter","setHasHadInitialFilter","filteredData","setFilteredData","reload","triggerReload","toggleSortQty","toggleSortDate","items","dependencies","filter","setFilter","onFilter","newFilter","name","tags","undefined","filterCb","item","hasMatchingName","toLowerCase","includes","hasMatchingTags","size","length","sortQty","a","b","quantity","sortDate","date","data","Object","values","map","index","Date","updateDatum","newItem","triggerUpdate","sanitizedItem","update","id","addNewItem","add","then","columns","property","header","render","datum","selectedIDs","primary","setSelectedIDs","Set","onItemSelect","_selectedIDs","has","delete","goToCamera","push","highlightIndex","setHighlightIndex","selectedStyle","background","rowStyles","setRowStyles","linksToCopy","setLinksToCopy","generateLinks","prefix","join","stylesAppliedToSelected","reduce","obj","deleteItems","forEach","res"],"mappings":"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","sourcesContent":["import { Box, Button, DataTable, Keyboard } from 'grommet';\nimport { Add, Camera, Down, Refresh, Up, Copy, Trash } from 'grommet-icons';\nimport { createBrowserHistory } from 'history';\nimport { intersection } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Router, withRouter } from 'react-router-dom';\nimport { Swipeable } from 'react-swipeable';\nimport styled from 'styled-components';\nimport { itemsDB } from '../../database/items';\nimport useItems from '../../hooks/useItems';\nimport { IItem } from '../../models/items';\nimport ActionsCell from './Cell/actions';\nimport NameCell from './Cell/Name';\nimport QuantityCell from './Cell/Quantity';\nimport TagsCell from './Cell/Tags';\nimport ListNameFilter from './Filters/name';\nimport ListTagsFilter from './Filters/tags';\nimport './List.scss';\nimport SelectedCell from './Cell/Selected';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport DateCell from './Cell/Date';\nimport { SmallButton } from './Cell/Selected';\n\nexport const listHistory = createBrowserHistory();\n\nconst ListContainer = styled(Box)`\n  height: 100vh;\n`;\n\nconst FilledSwipable = styled(Swipeable)`\n  flex: 1 2 auto;\n  flex-direction: column;\n  justify-content: space-between;\n  display: flex;\n  overflow: auto;\n  width: 100%;\n`;\n\ninterface IEditableItem extends IItem {\n  index?: number;\n}\n\nconst List = ({ history }) => {\n  const [isAscQty, setAscQty] = useState(false);\n  const [isAscDate, setAscDate] = useState(false);\n  const [hasHadInitialFilter, setHasHadInitialFilter] = useState(false);\n  const [filteredData, setFilteredData] = useState([] as IItem[]);\n  const [reload, triggerReload] = useState(0);\n\n  const toggleSortQty = () => setAscQty(!isAscQty);\n  const toggleSortDate = () => setAscDate(!isAscDate);\n\n  const items = useItems({ dependencies: reload });\n\n  const [filter, setFilter] = useState({\n  } as ListFilters | undefined);\n\n  const onFilter = (newFilter: ListFilters) => {\n    setHasHadInitialFilter(true);\n\n    if (!newFilter.name && !newFilter.tags) {\n      setFilter(undefined);\n    } else {\n      setFilter({ ...filter ? filter : [], ...newFilter } as ListFilters | undefined);\n    }\n  }\n\n  useEffect(() => {\n    const filterCb = (item: IItem) => {\n      if (!!item && !!filter) {\n        const hasMatchingName = (item.name && filter.name) ? item.name.toLowerCase().includes(filter.name.toLowerCase()) : false;\n        const hasMatchingTags = (filter.tags && filter.tags.size) ? !!intersection(item.tags, filter.tags ? [...filter.tags] : []).length : true;\n\n        return hasMatchingName && hasMatchingTags;\n      }\n      return true;\n    }\n\n    const sortQty = (a: IItem, b: IItem) => {\n      return isAscQty ? a.quantity - b.quantity : b.quantity - a.quantity;\n    };\n    const sortDate = (a: IItem, b: IItem) => {\n      return isAscDate ? +a.date - +b.date : +b.date - +a.date;\n    };\n\n    const data = Object.values(items)\n      .filter(hasHadInitialFilter ? filterCb : () => true)\n      .map((item, index) => {\n        if (!(item.quantity >= 0)) {\n          item.quantity = 0;\n        }\n        return { ...item, date: new Date(item.date), index };\n      })\n      // .sort(sortQty)\n      // .sort(sortDate);\n\n    setFilteredData(data);\n  }, [filter, items, isAscQty, isAscDate, hasHadInitialFilter]);\n\n\n\n  const updateDatum = (newItem: IEditableItem, triggerUpdate = true) => {\n    const sanitizedItem: IEditableItem = { ...newItem };\n    delete sanitizedItem.index;\n\n    itemsDB.update(newItem.id, sanitizedItem);\n\n    if (triggerUpdate) {\n      triggerReload(reload + 1);\n    }\n  }\n\n\n  const addNewItem = () => {\n    const newItem = {\n      date: new Date(),\n    };\n\n    itemsDB.add(newItem).then(item => {\n      triggerReload(reload + 1);\n    });\n  };\n\n  let columns = [\n    {\n      property: 'selected',\n      header: (<></>),\n      render: datum => <SelectedCell datum={datum} selectedIDs={selectedIDs} />\n    },\n    {\n      property: 'date',\n      header: (\n        <Box direction=\"row\" align=\"center\">\n          <span>Date</span>\n          <SmallButton icon={isAscDate ? <Up /> : <Down />} onClick={toggleSortDate} isSelected={true} />\n        </Box>\n      ),\n      render: datum => <DateCell datum={datum} selectedIDs={selectedIDs} updateDatum={updateDatum} />\n    },\n    {\n      property: 'id',\n      primary: true,\n      render: datum => (<></>),\n      header: <></>,\n    },\n    {\n      property: 'name',\n      header: (\n        <ListNameFilter onFilter={onFilter} />\n      ),\n      render: datum => <NameCell datum={datum} selectedIDs={selectedIDs} updateDatum={updateDatum} history={history}/>\n    },\n    {\n      property: 'tags',\n      header: (\n        <ListTagsFilter onFilter={onFilter} />\n      ),\n      render: datum => <TagsCell datum={datum} selectedIDs={selectedIDs} updateDatum={updateDatum} />\n    },\n\n    {\n      property: 'quantity',\n      header: (\n        <Box direction=\"row\" align=\"center\">\n          <span>Qty</span>\n          <SmallButton icon={isAscQty ? <Up /> : <Down />} onClick={toggleSortQty} isSelected={true}/>\n        </Box>\n      ),\n      render: datum => <QuantityCell datum={datum} selectedIDs={selectedIDs} updateDatum={updateDatum} selectedID={selectedIDs} />\n    }, {\n      property: 'actions',\n      header: <></>,\n      render: datum => <ActionsCell datum={datum} selectedIDs={selectedIDs} history={history} refresh={() => triggerReload(reload + 1)}  selectedID={selectedIDs} setSelectedID={setSelectedIDs} />\n    }];\n\n  // const onSaveNew = () => {\n  //   setNewItem({} as IEditableItem);\n  //   triggerReload(reload + 1);\n  //   setSelectedIDs(new Set([]));\n  // }\n\n  const [selectedIDs, setSelectedIDs] = useState(new Set([] as string[]));\n\n  const onItemSelect = ({ datum }: { datum: IEditableItem }) => {\n    const _selectedIDs = new Set(selectedIDs);\n\n    if (selectedIDs.has(datum.id)) {\n      _selectedIDs.delete(datum.id);\n    } else {\n      _selectedIDs.add(datum.id);\n    }\n\n    setSelectedIDs(_selectedIDs);\n  }\n\n  // useEffect(() => {\n  //   setDataIncludingNew(newItem.id ? [newItem, ...filteredData] : filteredData);\n  // }, [filteredData, newItem]);\n\n  const goToCamera = () => {\n    history.push('/');\n  }\n\n  const [highlightIndex, setHighlightIndex] = useState(0);\n\n  const selectedStyle = {\n    background: 'rgba(255, 255, 255, .1)'\n  };\n\n\n  const [rowStyles, setRowStyles] = useState({});\n  const [linksToCopy, setLinksToCopy] = useState('');\n\n  const generateLinks = () => {\n    const prefix = 'http://sherikwong.com/item/';\n    return [...selectedIDs].map(id => prefix + id).join('\\n\\n');\n  }\n\n  useEffect(() => {\n    const stylesAppliedToSelected = [...selectedIDs].reduce((obj, id) => {\n      return {\n        ...obj,\n        [id]: selectedStyle\n      };\n    }, {});\n    setRowStyles(stylesAppliedToSelected);\n\n    setLinksToCopy(generateLinks());\n\n  }, [selectedIDs]);\n\n  const deleteItems = () => {\n    selectedIDs.forEach(id => {\n      itemsDB.delete(id)\n        .then(res => {\n          const _selectedIDs = new Set(selectedIDs);\n          _selectedIDs.delete(id);\n          setSelectedIDs(_selectedIDs);\n          triggerReload(reload + 1);\n        });\n    });\n  }\n\n  return (\n    <Keyboard >\n      <ListContainer fill={true}>\n        <Box direction=\"row\" margin=\"medium\" justify=\"between\">\n          <Button icon={<Camera />} onClick={goToCamera} />\n          <Button icon={<Refresh />} onClick={() => triggerReload(reload + 1)} />\n        </Box>\n\n\n        <Router history={listHistory}>\n          <FilledSwipable >\n            <DataTable columns={columns}\n              rowProps={rowStyles}\n              data={filteredData}\n              onClickRow={onItemSelect}\n              primaryKey=\"id\"\n              pad=\"xxsmall\"\n            />\n          </FilledSwipable>\n\n          <Box direction=\"row\" justify=\"center\" margin=\"medium\">\n            <Button icon={<Add />} onClick={addNewItem} />\n\n            {selectedIDs.size > 0 &&\n              (\n                <CopyToClipboard text={linksToCopy}>\n                  <Button icon={<Copy />} />\n                </CopyToClipboard>\n              )}\n\n            <Button icon={<Trash />} onClick={deleteItems} />\n          </Box>\n        </Router>\n\n      </ListContainer>\n    </Keyboard>\n  );\n};\n\nexport default withRouter(List);\n\nexport interface ListFilters {\n  name: string;\n  tags: Set<string>;\n}\n"]},"metadata":{},"sourceType":"module"}