{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseDB } from './base';\nconst ITEMS = 'items';\n\nclass ItemsDB extends BaseDB {\n  constructor() {\n    super(ITEMS);\n  }\n\n  add(data) {\n    const newEntry = this._db.push(); // TODO: SK: Revisit bracket notation;\n\n\n    data.id = newEntry.key;\n    data.dateCreated = new Date();\n    data.quantity = 1;\n    return newEntry.set(data).then(res => {\n      return data;\n    });\n  }\n\n}\n\nexport const itemsDB = new ItemsDB();","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/database/items.tsx"],"names":["BaseDB","ITEMS","ItemsDB","constructor","add","data","newEntry","_db","push","id","key","dateCreated","Date","quantity","set","then","res","itemsDB"],"mappings":"AAAA;;AACA;AAGA,SAASA,MAAT,QAAgC,QAAhC;AAMA,MAAMC,KAAK,GAAG,OAAd;;AACA,MAAMC,OAAN,SAAsBF,MAAtB,CAAwD;AACtDG,EAAAA,WAAW,GAAG;AACZ,UAAMF,KAAN;AACD;;AAEMG,EAAAA,GAAP,CAAWC,IAAX,EAA+C;AAC7C,UAAMC,QAAQ,GAAG,KAAKC,GAAL,CAASC,IAAT,EAAjB,CAD6C,CAG7C;;;AACAH,IAAAA,IAAI,CAACI,EAAL,GAAUH,QAAQ,CAACI,GAAnB;AACAL,IAAAA,IAAI,CAACM,WAAL,GAAmB,IAAIC,IAAJ,EAAnB;AACAP,IAAAA,IAAI,CAACQ,QAAL,GAAgB,CAAhB;AAEA,WAAOP,QAAQ,CAACQ,GAAT,CAAaT,IAAb,EACJU,IADI,CACCC,GAAG,IAAI;AACX,aAAOX,IAAP;AACD,KAHI,CAAP;AAID;;AAjBqD;;AAqBxD,OAAO,MAAMY,OAAO,GAAG,IAAIf,OAAJ,EAAhB","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { IItem } from '../models/items';\nimport { BaseDB, IBaseDB } from './base';\n\nexport interface IItemsDB extends IBaseDB<IItem> {\n\n}\n\nconst ITEMS = 'items';\nclass ItemsDB extends BaseDB<IItem> implements IItemsDB {\n  constructor() {\n    super(ITEMS);\n  }\n\n  public add(data: Partial<IItem>): Promise<any> {\n    const newEntry = this._db.push();\n\n    // TODO: SK: Revisit bracket notation;\n    data.id = newEntry.key as any;\n    data.dateCreated = new Date();\n    data.quantity = 1;\n\n    return newEntry.set(data)\n      .then(res => {\n        return data;\n      });\n  }\n\n}\n\nexport const itemsDB = new ItemsDB();\n"]},"metadata":{},"sourceType":"module"}