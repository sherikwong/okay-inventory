{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/dynamic-form/dynamic-form.tsx\";\nimport { EFieldType } from '../../types/form/field';\nimport { fieldTypeMap } from './dynamic-form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { FormField } from 'grommet';\nexport const DynamicForm = ({\n  fields\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, fields === null || fields === void 0 ? void 0 : fields.map(field => {\n    const Input = fieldTypeMap.get(field.type || EFieldType.TEXT);\n    const selectConfig = field.type === EFieldType.SELECT || field.type == EFieldType.RADIO_GROUP ? {\n      labelKey: 'value',\n      valueKey: 'label'\n    } : {};\n    return /*#__PURE__*/React.createElement(FormField, {\n      label: titleCase(field.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({}, field, selectConfig, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    })));\n  }));\n};","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/dynamic-form/dynamic-form.tsx"],"names":["EFieldType","fieldTypeMap","React","titleCase","FormField","DynamicForm","fields","map","field","Input","get","type","TEXT","selectConfig","SELECT","RADIO_GROUP","labelKey","valueKey","name"],"mappings":";AAAA,SAASA,UAAT,QAAmC,wBAAnC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,MAA1B;AACA,SAASC,SAAT,QAA0B,SAA1B;AAMA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AACrD,sBACE,0CACGA,MADH,aACGA,MADH,uBACGA,MAAM,CAAEC,GAAR,CAAaC,KAAD,IAAW;AACtB,UAAMC,KAAK,GAAGR,YAAY,CAACS,GAAb,CAAiBF,KAAK,CAACG,IAAN,IAAcX,UAAU,CAACY,IAA1C,CAAd;AACA,UAAMC,YAAY,GAChBL,KAAK,CAACG,IAAN,KAAeX,UAAU,CAACc,MAA1B,IACAN,KAAK,CAACG,IAAN,IAAcX,UAAU,CAACe,WADzB,GAEI;AACEC,MAAAA,QAAQ,EAAE,OADZ;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAFJ,GAMI,EAPN;AASA,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEd,SAAS,CAACK,KAAK,CAACU,IAAP,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,oBAAWV,KAAX,EAAsBK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAhBA,CADH,CADF;AAqBD,CAtBM","sourcesContent":["import { EFieldType, IField } from '../../types/form/field';\nimport { fieldTypeMap } from './dynamic-form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { FormField } from 'grommet';\n\ninterface IFormProps {\n  fields: IField[];\n}\n\nexport const DynamicForm = ({ fields }: IFormProps) => {\n  return (\n    <>\n      {fields?.map((field) => {\n        const Input = fieldTypeMap.get(field.type || EFieldType.TEXT);\n        const selectConfig =\n          field.type === EFieldType.SELECT ||\n          field.type == EFieldType.RADIO_GROUP\n            ? {\n                labelKey: 'value',\n                valueKey: 'label',\n              }\n            : {};\n\n        return (\n          <FormField label={titleCase(field.name)}>\n            <Input {...field} {...selectConfig} />\n          </FormField>\n        );\n      })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}