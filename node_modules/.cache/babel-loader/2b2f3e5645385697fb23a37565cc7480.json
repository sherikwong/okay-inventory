{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/List/Cell/Date.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Box } from 'grommet';\nimport DayPicker from 'react-day-picker';\n\nconst DateCell = ({\n  datum,\n  selectedIDs,\n  updateDatum\n}) => {\n  const dateOpts = {\n    month: 'short',\n    day: 'numeric'\n  };\n  const [showDatepicker, toggleDatepicker] = useState(false);\n  useEffect(() => {\n    console.log(showDatepicker);\n  }, [showDatepicker]);\n\n  const onDatePicked = date => {\n    toggleDatepicker(false);\n    updateDatum({ ...datum,\n      date\n    });\n  };\n\n  const closeDatepicker = () => {\n    toggleDatepicker(false);\n  };\n\n  const editDate = () => {\n    toggleDatepicker(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    onClick: editDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, new Date(datum.date).toLocaleDateString(\"en-US\", dateOpts)), showDatepicker &&\n  /*#__PURE__*/\n  // <BlackOverlay percent=\"90%\">\n  // <Button icon={<Close />} onClick={closeDatepicker} />\n  React.createElement(DayPicker, {\n    selectedDays: [datum.date || new Date()],\n    onDayClick: onDatePicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }) // </BlackOverlay>\n  );\n};\n\nexport default DateCell;","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/List/Cell/Date.tsx"],"names":["React","useState","useEffect","Box","DayPicker","DateCell","datum","selectedIDs","updateDatum","dateOpts","month","day","showDatepicker","toggleDatepicker","console","log","onDatePicked","date","closeDatepicker","editDate","Date","toLocaleDateString"],"mappings":";AAAA,OAAOA,KAAP,IAAgCC,QAAhC,EAA0CC,SAA1C,QAA2D,OAA3D;AACA,SAASC,GAAT,QAA4B,SAA5B;AAGA,OAAOC,SAAP,MAAsB,kBAAtB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA;AAAtB,CAAD,KAAyC;AACxD,QAAMC,QAAQ,GAAG;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAjB;AACA,QAAM,CAACC,cAAD,EAAiBC,gBAAjB,IAAqCZ,QAAQ,CAAC,KAAD,CAAnD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;;AAIA,QAAMI,YAAY,GAAGC,IAAI,IAAI;AAC3BJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAEAL,IAAAA,WAAW,CAAC,EACV,GAAGF,KADO;AAEVW,MAAAA;AAFU,KAAD,CAAX;AAID,GAPD;;AASA,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAFD;;AAMA,QAAMM,QAAQ,GAAG,MAAM;AACrBN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAIA,sBAAQ,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEM,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,IAAIC,IAAJ,CAASd,KAAK,CAACW,IAAf,EAAqBI,kBAArB,CAAwC,OAAxC,EAAiDZ,QAAjD,CAAP,CADM,EAGLG,cAAc;AAAA;AACf;AAEE;AACA,sBAAC,SAAD;AAAW,IAAA,YAAY,EAAE,CAACN,KAAK,CAACW,IAAN,IAAc,IAAIG,IAAJ,EAAf,CAAzB;AAAqD,IAAA,UAAU,EAAEJ,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPI,CAQN;AARM,GAAR;AAcD,CAzCD;;AA0CA,eAAeX,QAAf","sourcesContent":["import React, { SyntheticEvent, useState, useEffect } from 'react';\nimport { Box, Button } from 'grommet';\nimport { useDoubleClick } from '@zattoo/use-double-click';\nimport BlackOverlay from '../../reusable/BlackOverlay';\nimport DayPicker from 'react-day-picker';\nimport { Close } from '../../../../node_modules/grommet-icons';\n\nconst DateCell = ({ datum, selectedIDs, updateDatum }) => {\n  const dateOpts = { month: 'short', day: 'numeric' };\n  const [showDatepicker, toggleDatepicker] = useState(false);\n\n  useEffect(() => {\n    console.log(showDatepicker);\n  }, [showDatepicker])\n\n  const onDatePicked = date => {\n    toggleDatepicker(false);\n\n    updateDatum({\n      ...datum,\n      date\n    });\n  }\n\n  const closeDatepicker = () => {\n    toggleDatepicker(false);\n  }\n\n\n\n  const editDate = () => {\n    toggleDatepicker(true);\n  }\n\n  return (<Box onClick={editDate}>\n    <span>{new Date(datum.date).toLocaleDateString(\"en-US\", dateOpts)}</span>\n\n    {showDatepicker &&\n    // <BlackOverlay percent=\"90%\">\n\n      // <Button icon={<Close />} onClick={closeDatepicker} />\n      <DayPicker selectedDays={[datum.date || new Date()]} onDayClick={onDatePicked} />\n    // </BlackOverlay>\n  }\n\n  </Box>\n  );\n\n}\nexport default DateCell;\n"]},"metadata":{},"sourceType":"module"}