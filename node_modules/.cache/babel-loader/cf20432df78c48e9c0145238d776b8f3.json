{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/form/form.tsx\";\nimport { fieldTypeMap } from './form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { FormField } from 'grommet';\nexport const Form = ({\n  fields\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, fields === null || fields === void 0 ? void 0 : fields.map(field => {\n    const Input = fieldTypeMap.get(field.type);\n    return /*#__PURE__*/React.createElement(FormField, {\n      label: titleCase(field.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({}, field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    })));\n  }));\n};","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/form/form.tsx"],"names":["fieldTypeMap","React","titleCase","FormField","Form","fields","map","field","Input","get","type","name"],"mappings":";AACA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,MAA1B;AACA,SAASC,SAAT,QAA0B,SAA1B;AAMA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAC9C,sBACE,0CACGA,MADH,aACGA,MADH,uBACGA,MAAM,CAAEC,GAAR,CAAaC,KAAD,IAAW;AACtB,UAAMC,KAAK,GAAGR,YAAY,CAACS,GAAb,CAAiBF,KAAK,CAACG,IAAvB,CAAd;AACA,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAER,SAAS,CAACK,KAAK,CAACI,IAAP,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,oBAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAPA,CADH,CADF;AAYD,CAbM","sourcesContent":["import { IField } from '../../types/form/field';\nimport { fieldTypeMap } from './form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { FormField } from 'grommet';\n\ninterface IFormProps {\n  fields: IField[];\n}\n\nexport const Form = ({ fields }: IFormProps) => {\n  return (\n    <>\n      {fields?.map((field) => {\n        const Input = fieldTypeMap.get(field.type);\n        return (\n          <FormField label={titleCase(field.name)}>\n            <Input {...field} />\n          </FormField>\n        );\n      })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}