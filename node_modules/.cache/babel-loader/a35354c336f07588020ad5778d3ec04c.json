{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/List/Cell/Quantity.tsx\";\nimport { Box, Button } from 'grommet';\nimport React from 'react';\nimport { Up, Down } from 'grommet-icons';\nimport styled from 'styled-components';\nconst DirectionArrows = styled(Button)`\npadding: 0;\ntransform: scale(0.5);\npadding-left: 5px;\n`;\n\nconst QuantityCell = props => {\n  const {\n    datum,\n    updateDatum,\n    selectedID\n  } = props;\n\n  const alterQty = (num, quan = datum.quantity) => () => {\n    const sanitizedQuantity = isNaN(+quan) ? 0 : +quan;\n    const updatedNum = sanitizedQuantity + +num;\n    updateDatum({ ...datum,\n      quantity: updatedNum\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, datum.quantity || 0), true && /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(DirectionArrows, {\n    icon: /*#__PURE__*/React.createElement(Up, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }\n    }),\n    onClick: alterQty(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DirectionArrows, {\n    icon: /*#__PURE__*/React.createElement(Down, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 30\n      }\n    }),\n    onClick: alterQty(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default QuantityCell;","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/List/Cell/Quantity.tsx"],"names":["Box","Button","React","Up","Down","styled","DirectionArrows","QuantityCell","props","datum","updateDatum","selectedID","alterQty","num","quan","quantity","sanitizedQuantity","isNaN","updatedNum"],"mappings":";AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,SAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,EAAaC,IAAb,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,eAAe,GAAGD,MAAM,CAACJ,MAAD,CAAS;;;;CAAvC;;AAMA,MAAMM,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA;AAAtB,MAAqCH,KAA3C;;AAEA,QAAMI,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAI,GAAGL,KAAK,CAACM,QAAnB,KAAgC,MAAM;AACrD,UAAMC,iBAAiB,GAAGC,KAAK,CAAC,CAACH,IAAF,CAAL,GAAe,CAAf,GAAmB,CAACA,IAA9C;AAEA,UAAMI,UAAU,GAAGF,iBAAiB,GAAG,CAACH,GAAxC;AAEAH,IAAAA,WAAW,CAAC,EACV,GAAGD,KADO;AAEVM,MAAAA,QAAQ,EAAEG;AAFA,KAAD,CAAX;AAID,GATD;;AAWA,sBAAO,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,KAAK,CAACM,QAAN,IAAkB,CAAzB,CADK,EAGJ,qBAAQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP,oBAAC,eAAD;AAAiB,IAAA,IAAI,eAAE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB;AAA+B,IAAA,OAAO,EAAEH,QAAQ,CAAC,CAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,eAEP,oBAAC,eAAD;AAAiB,IAAA,IAAI,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB;AAAiC,IAAA,OAAO,EAAEA,QAAQ,CAAC,CAAC,CAAF,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,CAHJ,CAAP;AASD,CAvBD;;AAwBA,eAAeL,YAAf","sourcesContent":["import { Box, Button } from 'grommet';\nimport React from 'react';\nimport { Up, Down } from 'grommet-icons';\nimport styled from 'styled-components';\n\nconst DirectionArrows = styled(Button)`\npadding: 0;\ntransform: scale(0.5);\npadding-left: 5px;\n`;\n\nconst QuantityCell = props => {\n  const { datum, updateDatum, selectedID } = props;\n\n  const alterQty = (num, quan = datum.quantity) => () => {\n    const sanitizedQuantity = isNaN(+quan) ? 0 : +quan;\n\n    const updatedNum = sanitizedQuantity + +num;\n\n    updateDatum({\n      ...datum,\n      quantity: updatedNum\n    });\n  };\n\n  return <Box direction=\"row\" align=\"center\">\n    <span>{datum.quantity || 0}</span>\n    {/* {(selectedID.has(datum.id) || datum.isNewItem) && <Box> */}\n    {true && <Box>\n      <DirectionArrows icon={<Up />} onClick={alterQty(1)} />\n      <DirectionArrows icon={<Down />} onClick={alterQty(-1)} />\n    </Box>}\n  </Box>\n\n}\nexport default QuantityCell;\n"]},"metadata":{},"sourceType":"module"}