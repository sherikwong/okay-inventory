{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/dynamic-form/dynamic-form.tsx\";\nimport { EFieldType } from '../../types/form/field';\nimport { fieldTypeMap } from './dynamic-form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { Box, FormField } from 'grommet';\nexport const DynamicForm = ({\n  fields\n}) => {\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, fields === null || fields === void 0 ? void 0 : fields.map(field => {\n    const type = field.type || EFieldType.TEXT;\n    const Input = fieldTypeMap.get(type);\n    const selectConfig = field.type === EFieldType.SELECT || field.type == EFieldType.RADIO_GROUP ? {\n      labelKey: 'value',\n      valueKey: 'label'\n    } : {};\n    return /*#__PURE__*/React.createElement(FormField, {\n      label: titleCase(field.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({\n      value: field.value,\n      options: field.options\n    }, selectConfig, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    })));\n  }));\n};","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/dynamic-form/dynamic-form.tsx"],"names":["EFieldType","fieldTypeMap","React","titleCase","Box","FormField","DynamicForm","fields","map","field","type","TEXT","Input","get","selectConfig","SELECT","RADIO_GROUP","labelKey","valueKey","name","value","options"],"mappings":";AAAA,SAASA,UAAT,QAAmC,wBAAnC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,MAA1B;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,SAA/B;AAOA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AACrD,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MADH,aACGA,MADH,uBACGA,MAAM,CAAEC,GAAR,CAAaC,KAAD,IAAW;AACtB,UAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,IAAcV,UAAU,CAACW,IAAtC;AAEA,UAAMC,KAAK,GAAGX,YAAY,CAACY,GAAb,CAAiBH,IAAjB,CAAd;AACA,UAAMI,YAAY,GAChBL,KAAK,CAACC,IAAN,KAAeV,UAAU,CAACe,MAA1B,IACAN,KAAK,CAACC,IAAN,IAAcV,UAAU,CAACgB,WADzB,GAEI;AACEC,MAAAA,QAAQ,EAAE,OADZ;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAFJ,GAMI,EAPN;AASA,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEf,SAAS,CAACM,KAAK,CAACU,IAAP,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEV,KAAK,CAACW,KAApB;AAA2B,MAAA,OAAO,EAAEX,KAAK,CAACY;AAA1C,OAAuDP,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAlBA,CADH,CADF;AAuBD,CAxBM","sourcesContent":["import { EFieldType, IField } from '../../types/form/field';\nimport { fieldTypeMap } from './dynamic-form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { Box, FormField } from 'grommet';\n\ninterface IFormProps {\n  fields: IField[];\n  direction?: 'row' | 'column';\n}\n\nexport const DynamicForm = ({ fields }: IFormProps) => {\n  return (\n    <Box>\n      {fields?.map((field) => {\n        const type = field.type || EFieldType.TEXT;\n\n        const Input = fieldTypeMap.get(type);\n        const selectConfig =\n          field.type === EFieldType.SELECT ||\n          field.type == EFieldType.RADIO_GROUP\n            ? {\n                labelKey: 'value',\n                valueKey: 'label',\n              }\n            : {};\n\n        return (\n          <FormField label={titleCase(field.name)}>\n            <Input value={field.value} options={field.options} {...selectConfig} />\n          </FormField>\n        );\n      })}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}