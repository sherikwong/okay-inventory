{"ast":null,"code":"import { useCallback, useRef } from 'react';\n/**\n * @param {clickEvent} doubleClick\n * @param {clickEvent} [click]\n * @param {UseDoubleClickOptions} [options]\n * @returns {clickEvent}\n */\n\nexport const useDoubleClick = (doubleClick, click, options) => {\n  /** @type {UseDoubleClickOptions} */\n  options = {\n    timeout: 200,\n    ...options\n  };\n  /** @type {{ current: number }} */\n\n  const clickTimeout = useRef();\n\n  const clearClickTimeout = () => {\n    if (clickTimeout) {\n      clearTimeout(clickTimeout.current);\n      clickTimeout.current = null;\n    }\n  };\n\n  return useCallback(event => {\n    clearClickTimeout();\n\n    if (click &&\n    /** @type {React.UIEvent} */\n    event.detail === 1) {\n      clickTimeout.current = setTimeout(() => {\n        click(event);\n      }, options.timeout);\n    }\n\n    if (\n    /** @type {React.UIEvent} */\n    event.detail % 2 === 0) {\n      doubleClick(event);\n    }\n  }, [click, doubleClick, options.timeout]);\n};\n/**\n * @callback clickEvent\n * @param {React.SyntheticEvent} [event]\n */\n\n/**\n * @typedef {Object} UseDoubleClickOptions\n * @prop {number} [timeout]\n */","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/node_modules/@zattoo/use-double-click/lib/index.js"],"names":["useCallback","useRef","useDoubleClick","doubleClick","click","options","timeout","clickTimeout","clearClickTimeout","clearTimeout","current","event","detail","setTimeout"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAqC,OAArC;AACA;;;;;;;AAMA,OAAO,MAAMC,cAAc,GAAG,CAACC,WAAD,EAAcC,KAAd,EAAqBC,OAArB,KAAiC;AAC3D;AACAA,EAAAA,OAAO,GAAG;AACNC,IAAAA,OAAO,EAAE,GADH;AAEN,OAAGD;AAFG,GAAV;AAIA;;AACA,QAAME,YAAY,GAAGN,MAAM,EAA3B;;AACA,QAAMO,iBAAiB,GAAG,MAAM;AAC5B,QAAID,YAAJ,EAAkB;AACdE,MAAAA,YAAY,CAACF,YAAY,CAACG,OAAd,CAAZ;AACAH,MAAAA,YAAY,CAACG,OAAb,GAAuB,IAAvB;AACH;AACJ,GALD;;AAMA,SAAOV,WAAW,CAAEW,KAAD,IAAW;AAC1BH,IAAAA,iBAAiB;;AACjB,QAAIJ,KAAK;AAAI;AAA8BO,IAAAA,KAAD,CAAQC,MAAR,KAAmB,CAA7D,EAAgE;AAC5DL,MAAAA,YAAY,CAACG,OAAb,GAAuBG,UAAU,CAAC,MAAM;AACpCT,QAAAA,KAAK,CAACO,KAAD,CAAL;AACH,OAFgC,EAE9BN,OAAO,CAACC,OAFsB,CAAjC;AAGH;;AACD;AAAK;AAA6BK,IAAAA,KAAD,CAAQC,MAAR,GAAiB,CAAjB,KAAuB,CAAxD,EAA2D;AACvDT,MAAAA,WAAW,CAACQ,KAAD,CAAX;AACH;AACJ,GAViB,EAUf,CAACP,KAAD,EAAQD,WAAR,EAAqBE,OAAO,CAACC,OAA7B,CAVe,CAAlB;AAWH,CAzBM;AA0BP;;;;;AAIA","sourcesContent":["import { useCallback, useRef, } from 'react';\n/**\n * @param {clickEvent} doubleClick\n * @param {clickEvent} [click]\n * @param {UseDoubleClickOptions} [options]\n * @returns {clickEvent}\n */\nexport const useDoubleClick = (doubleClick, click, options) => {\n    /** @type {UseDoubleClickOptions} */\n    options = {\n        timeout: 200,\n        ...options,\n    };\n    /** @type {{ current: number }} */\n    const clickTimeout = useRef();\n    const clearClickTimeout = () => {\n        if (clickTimeout) {\n            clearTimeout(clickTimeout.current);\n            clickTimeout.current = null;\n        }\n    };\n    return useCallback((event) => {\n        clearClickTimeout();\n        if (click && /** @type {React.UIEvent} */ (event).detail === 1) {\n            clickTimeout.current = setTimeout(() => {\n                click(event);\n            }, options.timeout);\n        }\n        if ( /** @type {React.UIEvent} */(event).detail % 2 === 0) {\n            doubleClick(event);\n        }\n    }, [click, doubleClick, options.timeout]);\n};\n/**\n * @callback clickEvent\n * @param {React.SyntheticEvent} [event]\n */\n/**\n * @typedef {Object} UseDoubleClickOptions\n * @prop {number} [timeout]\n */\n"]},"metadata":{},"sourceType":"module"}