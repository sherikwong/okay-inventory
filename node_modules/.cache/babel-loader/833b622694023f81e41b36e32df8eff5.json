{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/form/form.tsx\";\nimport { EFieldType } from '../../types/form/field';\nimport { fieldTypeMap } from './form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { FormField } from 'grommet';\nexport const Form = ({\n  fields\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, fields === null || fields === void 0 ? void 0 : fields.map(field => {\n    const Input = fieldTypeMap.get(field.type);\n    const selectConfig = field.type === EFieldType.SELECT ? {\n      labelKey: 'value',\n      valueKey: 'label'\n    } : {};\n    return /*#__PURE__*/React.createElement(FormField, {\n      label: titleCase(field.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({}, field, selectConfig, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    })));\n  }));\n};","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/form/form.tsx"],"names":["EFieldType","fieldTypeMap","React","titleCase","FormField","Form","fields","map","field","Input","get","type","selectConfig","SELECT","labelKey","valueKey","name"],"mappings":";AAAA,SAASA,UAAT,QAAmC,wBAAnC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,MAA1B;AACA,SAASC,SAAT,QAA0B,SAA1B;AAMA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAC9C,sBACE,0CACGA,MADH,aACGA,MADH,uBACGA,MAAM,CAAEC,GAAR,CAAaC,KAAD,IAAW;AACtB,UAAMC,KAAK,GAAGR,YAAY,CAACS,GAAb,CAAiBF,KAAK,CAACG,IAAvB,CAAd;AACA,UAAMC,YAAY,GAChBJ,KAAK,CAACG,IAAN,KAAeX,UAAU,CAACa,MAA1B,GACI;AACEC,MAAAA,QAAQ,EAAE,OADZ;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADJ,GAKI,EANN;AAQA,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEZ,SAAS,CAACK,KAAK,CAACQ,IAAP,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,oBAAWR,KAAX,EAAsBI,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAfA,CADH,CADF;AAoBD,CArBM","sourcesContent":["import { EFieldType, IField } from '../../types/form/field';\nimport { fieldTypeMap } from './form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { FormField } from 'grommet';\n\ninterface IFormProps {\n  fields: IField[];\n}\n\nexport const Form = ({ fields }: IFormProps) => {\n  return (\n    <>\n      {fields?.map((field) => {\n        const Input = fieldTypeMap.get(field.type);\n        const selectConfig =\n          field.type === EFieldType.SELECT\n            ? {\n                labelKey: 'value',\n                valueKey: 'label',\n              }\n            : {};\n\n        return (\n          <FormField label={titleCase(field.name)}>\n            <Input {...field} {...selectConfig} />\n          </FormField>\n        );\n      })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}