{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/components/dynamic-form/dynamic-form.tsx\";\nimport { EFieldType } from '../../types/form/field';\nimport { fieldTypeMap } from './dynamic-form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { Box, FormField, TextInput } from 'grommet';\nexport const DynamicForm = ({\n  fields\n}) => {\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, fields === null || fields === void 0 ? void 0 : fields.map(field => {\n    var _field$type;\n\n    const Input = fieldTypeMap.get(((_field$type = field.type) === null || _field$type === void 0 ? void 0 : _field$type.toLowerCase()) || EFieldType.TEXT) || TextInput;\n    const selectConfig = field.type === EFieldType.SELECT || field.type == EFieldType.RADIO_GROUP ? {\n      labelKey: 'value',\n      valueKey: 'label'\n    } : {};\n    return /*#__PURE__*/React.createElement(FormField, {\n      label: titleCase(field.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({}, field, {\n      type: field.type === EFieldType.NUMBER ? 'number' : 'text'\n    }, selectConfig, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    })));\n  }));\n};","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/components/dynamic-form/dynamic-form.tsx"],"names":["EFieldType","fieldTypeMap","React","titleCase","Box","FormField","TextInput","DynamicForm","fields","map","field","Input","get","type","toLowerCase","TEXT","selectConfig","SELECT","RADIO_GROUP","labelKey","valueKey","name","NUMBER"],"mappings":";AAAA,SAASA,UAAT,QAAmC,wBAAnC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,MAA1B;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,SAAzB,QAA0C,SAA1C;AAOA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AACrD,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MADH,aACGA,MADH,uBACGA,MAAM,CAAEC,GAAR,CAAaC,KAAD,IAAW;AAAA;;AACtB,UAAMC,KAAK,GACTV,YAAY,CAACW,GAAb,CAAiB,gBAAAF,KAAK,CAACG,IAAN,4DAAYC,WAAZ,OAA6Bd,UAAU,CAACe,IAAzD,KACAT,SAFF;AAGA,UAAMU,YAAY,GAChBN,KAAK,CAACG,IAAN,KAAeb,UAAU,CAACiB,MAA1B,IACAP,KAAK,CAACG,IAAN,IAAcb,UAAU,CAACkB,WADzB,GAEI;AACEC,MAAAA,QAAQ,EAAE,OADZ;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAFJ,GAMI,EAPN;AASA,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEjB,SAAS,CAACO,KAAK,CAACW,IAAP,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,oBACMX,KADN;AAEE,MAAA,IAAI,EAAEA,KAAK,CAACG,IAAN,KAAeb,UAAU,CAACsB,MAA1B,GAAmC,QAAnC,GAA8C;AAFtD,OAGMN,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AASD,GAtBA,CADH,CADF;AA2BD,CA5BM","sourcesContent":["import { EFieldType, IField } from '../../types/form/field';\nimport { fieldTypeMap } from './dynamic-form.variables';\nimport React from 'react';\nimport { titleCase } from 'voca';\nimport { Box, FormField, TextInput } from 'grommet';\n\ninterface IFormProps {\n  fields: IField[];\n  direction?: 'row' | 'column';\n}\n\nexport const DynamicForm = ({ fields }: IFormProps) => {\n  return (\n    <Box>\n      {fields?.map((field) => {\n        const Input =\n          fieldTypeMap.get(field.type?.toLowerCase() || EFieldType.TEXT) ||\n          TextInput;\n        const selectConfig =\n          field.type === EFieldType.SELECT ||\n          field.type == EFieldType.RADIO_GROUP\n            ? {\n                labelKey: 'value',\n                valueKey: 'label',\n              }\n            : {};\n\n        return (\n          <FormField label={titleCase(field.name)}>\n            <Input\n              {...field}\n              type={field.type === EFieldType.NUMBER ? 'number' : 'text'}\n              {...selectConfig}\n            />\n          </FormField>\n        );\n      })}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}