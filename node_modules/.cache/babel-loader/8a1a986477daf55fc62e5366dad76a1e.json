{"ast":null,"code":"var _jsxFileName = \"/Users/sherikwong/Desktop/okay-inventory/src/App.tsx\";\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Grommet, Box } from 'grommet';\nimport { createBrowserHistory } from 'history';\nimport React, { createFactory, useState } from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport './App.scss';\nimport Authentication, { IS_AUTHENTICATED } from './components/authentication/authentication';\n// import { List } from '../node_modules/grommet-icons/icons';\nimport List from './components/List/List';\nimport { Menu } from 'grommet-icons';\nimport ItemRouter from './components/item/Router';\nimport { cookies } from './index';\nimport Scan from './components/scan/scan';\nimport Logo from './components/reusable/logo/logo';\nconst theme = {\n  calendar: {\n    medium: {\n      daySize: 'calc(100vw/8)'\n    }\n  }\n};\nexport const routes = {\n  '/item/:id': {\n    component: ItemRouter,\n    buttons: {\n      top: [],\n      bottom: []\n    }\n  },\n  '/list': {\n    component: List,\n    buttons: {\n      top: [],\n      bottom: []\n    }\n  },\n  '/': {\n    component: Scan,\n    buttons: {\n      top: [{\n        icon: Menu\n      }],\n      bottom: []\n    }\n  }\n};\nconst history = createBrowserHistory();\n\nconst App = () => {\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const hasAuthenticatedCookie = cookies.get(IS_AUTHENTICATED);\n  const [logoHasPlayed, setLogoHasPlayed] = useState(false);\n  setTimeout(() => {\n    setLogoHasPlayed(true);\n  }, 3000);\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    themeMode: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, !logoHasPlayed ? /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    alignContent: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    animated: true,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(Router, {\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, hasAuthenticatedCookie || isAuthenticated ? Object.entries(routes).map(([path, info]) => /*#__PURE__*/React.createElement(Route, {\n    path: path,\n    key: path,\n    component: createFactory(info.component),\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(Authentication, {\n    setAuthenticated: setAuthenticated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 20\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sherikwong/Desktop/okay-inventory/src/App.tsx"],"names":["Grommet","Box","createBrowserHistory","React","createFactory","useState","Route","Router","Authentication","IS_AUTHENTICATED","List","Menu","ItemRouter","cookies","Scan","Logo","theme","calendar","medium","daySize","routes","component","buttons","top","bottom","icon","history","App","isAuthenticated","setAuthenticated","hasAuthenticatedCookie","get","logoHasPlayed","setLogoHasPlayed","setTimeout","Object","entries","map","path","info"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Grommet, Box } from 'grommet';\nimport { createBrowserHistory } from 'history';\nimport React, { ComponentClass, createFactory, useState, useEffect } from 'react';\nimport { Route, Router, withRouter } from 'react-router-dom';\nimport { FirebaseAuthProvider } from 'use-firebase-auth';\nimport './App.scss';\nimport Authentication, { IS_AUTHENTICATED } from './components/authentication/authentication';\nimport { db } from './database';\n// import { List } from '../node_modules/grommet-icons/icons';\nimport List from './components/List/List';\nimport { Menu } from 'grommet-icons';\nimport ItemRouter from './components/item/Router';\nimport { cookies } from './index';\nimport Scan from './components/scan/scan';\nimport Logo from './components/reusable/logo/logo';\n\n\nconst theme = {\n  calendar: {\n    medium: {\n      daySize: 'calc(100vw/8)'\n    }\n  },\n};\n\nexport interface INavButton {\n  icon: any;\n  click?: () => {};\n}\nexport interface IRoute {\n  component: ComponentClass;\n  buttons?: { [key: string]: INavButton[] };\n}\n\nexport const routes = {\n  '/item/:id': {\n    component: ItemRouter,\n    buttons: {\n      top: [],\n      bottom: []\n    }\n  },\n  '/list': {\n    component: List,\n    buttons: {\n      top: [],\n      bottom: []\n    }\n  },\n  '/': {\n    component: Scan,\n    buttons: {\n      top: [{\n        icon: Menu\n      }],\n      bottom: []\n    },\n  }\n};\n\nconst history = createBrowserHistory();\n\nconst App = () => {\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const hasAuthenticatedCookie = cookies.get(IS_AUTHENTICATED);\n  const [logoHasPlayed, setLogoHasPlayed] = useState(false);\n\n  setTimeout(() => {\n    setLogoHasPlayed(true);\n  }, 3000)\n\n  return (\n    <Grommet theme={theme} themeMode=\"dark\">\n      {\n        !logoHasPlayed\n          ? (\n            <Box fill={true} alignContent=\"center\" justify=\"center\">\n              <Logo animated={true} width=\"100%\"/>\n            </Box>\n          ) : <Router history={history}>\n            {\n              hasAuthenticatedCookie || isAuthenticated\n                ? (Object.entries(routes).map(([path, info]) => (\n                  <Route path={path} key={path} component={createFactory(info.component as any)} exact />\n                )))\n                : (<Authentication setAuthenticated={setAuthenticated} />)\n            }\n          </Router>}\n    </Grommet>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}