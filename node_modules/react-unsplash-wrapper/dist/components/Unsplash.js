"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Constants
var PATH = "//source.unsplash.com";
var USER = "user";
var COLLECTION = "collection";
var DAILY = "daily";
var RANDOM = "random";
var WIDTH = 1080;
var HEIGHT = 720;
var DEFAULT_STYLES = {
  backgroundRepeat: "no-repeat",
  backgroundSize: "cover",
  display: "flex",
  flexDirection: "column",
  justifyContent: "center",
  alignItems: "center",
  margin: "auto"
};
var EXPAND_STYLES = {
  position: "absolute",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  margin: 0
}; // Helper to generate url for unsplash

var generateUrl = function generateUrl(_ref) {
  var username = _ref.username,
      width = _ref.width,
      height = _ref.height,
      photoId = _ref.photoId,
      collectionId = _ref.collectionId,
      keywords = _ref.keywords,
      fixed = _ref.fixed;
  var url = [PATH];
  if (fixed) return url.push(DAILY).join("/");
  if (username) url.push(USER, username);
  if (!username && collectionId) url.push(COLLECTION, collectionId);
  if (!username && !collectionId && photoId) url.push(photoId);
  if (!username && !photoId && !collectionId && !keywords) url.push(RANDOM);
  url.push("".concat(width, "x").concat(height));
  if (keywords) url.push("?".concat(keywords.replace(/\s/g, "")));
  return url.join("/");
};

var Unsplash = function Unsplash(_ref2) {
  var children = _ref2.children,
      photoId = _ref2.photoId,
      collectionId = _ref2.collectionId,
      username = _ref2.username,
      expand = _ref2.expand,
      fixed = _ref2.fixed,
      img = _ref2.img,
      keywords = _ref2.keywords,
      style = _ref2.style,
      width = _ref2.width,
      height = _ref2.height;
  if (typeof width === "string") width = parseInt(width, 10);
  if (typeof height === "string") height = parseInt(height, 10);
  var urlWidth = style && style.width || width;
  var urlHeight = style && style.height || height;
  var url = encodeURI(generateUrl({
    username: username,
    collectionId: collectionId,
    photoId: photoId,
    keywords: keywords,
    fixed: fixed,
    width: urlWidth,
    height: urlHeight
  }));

  var imageStyles = _objectSpread({
    width: width,
    height: height
  }, style);

  var backgroundStyles = _objectSpread({}, DEFAULT_STYLES, {
    backgroundImage: "url(".concat(url, ")")
  });

  if (expand) {
    backgroundStyles = _objectSpread({}, backgroundStyles, {}, EXPAND_STYLES);
  } else {
    backgroundStyles = _objectSpread({}, backgroundStyles, {
      width: width,
      height: height
    }, style);
  }

  return img ? _react.default.createElement("img", {
    src: url,
    style: imageStyles
  }) : _react.default.createElement("div", {
    style: backgroundStyles
  }, children);
};

Unsplash.propTypes = {
  children: _propTypes.default.node,
  collectionId: _propTypes.default.number,
  username: _propTypes.default.string,
  keywords: _propTypes.default.string,
  expand: _propTypes.default.bool,
  fixed: _propTypes.default.bool,
  img: _propTypes.default.bool,
  style: _propTypes.default.object,
  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
};
Unsplash.defaultProps = {
  expand: false,
  fixed: false,
  img: false,
  width: WIDTH,
  height: HEIGHT
};
var _default = Unsplash;
exports.default = _default;